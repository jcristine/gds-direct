'use strict';

function chunk(arr, limit) {

	let result = [];

	while (arr.length > limit)
	{
		result.push(arr.slice(0, limit));
		arr = arr.slice(limit);
	}

	if (arr.length > 0)
		result.push(arr);

	return result;
}

function substitutePrintableChar(ch)
{
	let isApollo	= window.TerminalState.state.language === 'APOLLO';

	let sabreLayout = {
		'\'': '‡',
		'[': '¤',
		'=': '*',
		'\\': '§',
		// shift + ","
	};

	let apolloLayout = {
		'[': '¤',
		']': '$',
		'=': '*',
		'`': '>',
	};

	let layout = isApollo ? apolloLayout : sabreLayout;

	return layout[ch] || ch.toUpperCase();
}

function splitLines(txt)
{
	return txt.split(/\r?\n/);
}

function makeCachedParts(txt, rows)
{
	let lines = splitLines(txt);

	return chunk(lines, (rows || 20) ).map(function(sectionLines){
		return sectionLines.join('\n');
	});
}

module.exports = {
	makeCachedParts 		:	makeCachedParts,
	substitutePrintableChar :	substitutePrintableChar
};