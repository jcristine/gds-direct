'use strict';

import TerminalPlugin from '../middleware/terminal';

export default class Terminal {

	constructor( params )
	{
		this.plugin 				= null;
		this.settings 				= params;
		this.context 				= document.createElement('div');
		this.context.className 		= 'terminal';

		this.context.style.height	= this.settings.parentContext.clientHeight + 'px';
		this.context.innerHTML 		= '>';

		this.context.addEventListener('click', () => {
			if (!this.plugin)
			{
				this.context.innerHTML = '';
				this.plugin = new TerminalPlugin( this.context, this.settings['name'] );
			}
		});

		this.settings.parentContext.appendChild( this.context );
	}
	
	destroy()
	{
		if (this.plugin)
			this.plugin.getPlugin().destroy();
	}

	detach()
	{
		console.log(' detach ', this);
	}

	reattach( parentNode )
	{
		this.settings.parentContext = parentNode;
		this.context.style.height	= this.settings.parentContext.clientHeight + 'px';
		this.context.style.width	= this.settings.parentContext.clientWidth + 'px';

		this.settings.parentContext.appendChild( this.context );

		if (this.plugin)
			this.plugin.getPlugin().resize();
	}

	initPlugin()
	{
		// console.log( this );
		// this.plugin = new TerminalPlugin( this.context, this.settings['name'] );
		// this.context.removeEventListener('click', this.initPlugin);
	}

	create()
	{
		// this.plugin = new TerminalPlugin( this.context, this.settings['name'] );
	}
	
	focus()
	{
		//console.log(' focus focus ', this.params)
		//this.plugin.getWindow().focus();
	}
}