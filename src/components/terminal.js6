'use strict';

import TerminalPlugin from '../middleware/terminal';

export default class Terminal {

	constructor( params )
	{
		this.plugin 				= null;
		this.settings 				= params;
		this.context 				= document.createElement('div');
		this.context.className 		= 'terminal';

		// let offsets = this.settings.parentContext.getBoundingClientRect();

		this.context.style.height	= this.settings.parentContext.clientHeight + 'px';
		this.context.style.width	= this.settings.parentContext.clientWidth + 'px';


		// this.context.style.height	= offsets.height + 'px';
		// this.context.style.width	= offsets.width + 'px';

		// console.log( this.settings.parentContext.clientHeight );
		// console.log( this.settings.parentContext.clientWidth );
		// console.log( offsets.height );
		// console.log( '==' );
		// console.log( this.settings.parentContext.getClientRects() );

		this.context.innerHTML 		= '>';

		this.context.addEventListener('click', () => {
			if (!this.plugin)
			{
				this.context.innerHTML = '';

				this.plugin = new TerminalPlugin({
					context 		: this.context,
					name 			: this.settings['name'],
					sessionIndex 	: this.settings['sessionIndex'],
					gds 			: this.settings['gds'],
					// language 		: this.settings['language']
				});
			}
		});

		this.settings.parentContext.appendChild( this.context );
	}
	
	destroy()
	{
		if (this.plugin)
			this.plugin.getPlugin().destroy();
	}

	detach()
	{
		console.log(' detach ', this);
	}

	reattach( parentNode )
	{
		this.settings.parentContext = parentNode;

		this.context.style.height	= this.settings.parentContext.clientHeight + 'px';
		this.context.style.width	= this.settings.parentContext.clientWidth + 'px';

		this.settings.parentContext.appendChild( this.context );

		if (this.plugin)
			this.plugin.getPlugin().resize().scroll_to_bottom();
	}
}