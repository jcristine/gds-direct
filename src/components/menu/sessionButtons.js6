'use strict';

export default class SessionKeys
{
	constructor( params )
	{
		this.context = document.createElement('div');
		this.settings = params;
	}

	makeButton(value, index)
	{
		let button 			= document.createElement('button');
		button.className	= 'btn btn-sm btn-purple font-bold';
		button.innerHTML	= value;

		if (this.settings.session === index)
		{
			button.className += ' active';
		}

		if ( !this.settings.active )
		{
			button.className += ' hidden';
		}

		button.addEventListener('click', () => {
			// button.classList.toggle('active');

			// if ( !$.terminal.active() )
			// 	return false;
			// $.terminal.active().exec('S' + value );

			window.TerminalState.change({
				sessionIndex 	: index,
				gds				: this.settings.gds,
				command			: 'S' + value
			}, 'CHANGE_SESSION_BY_MENU');
		});

		return button;
	}

	getButtons()
	{
		return ['A', 'B', 'C', 'D', 'E'].map( this.makeButton.bind( this ) );
	}

	getTrigger()
	{
		let button 			= document.createElement('button');
		button.className	= 'btn btn-sm btn-mint font-bold' + ( this.settings['active'] ? ' active' : '' );
		button.innerHTML	= this.settings['gds'];

		button.addEventListener('click', () => {
			window.TerminalState.change({
				gds				: this.settings.gds
			}, 'CHANGE_GDS');
		});

		return button;
	}

	render()
	{
		this.context.appendChild( this.getTrigger() );

		this.getButtons().map( ( button ) => {
			this.context.appendChild( button );
		});

		return this.context;
	}
}