'use strict';

import History 			from './popovers/history';
import TextSize 		from './popovers/textSize';
import sessionButtons	from './menu/sessionButtons';

let context 		= document.createElement('aside');
context.className 	= 'sideMenu';

let parentContext;

function createBtn()
{
	let btn 		= document.createElement('button');
	btn.type		= 'button';
	btn.className 	= 'btn btn-primary';

	return btn;
}


export default class MenuPanel
{
	static toggle()
	{
		let btn 		= createBtn();
		btn.innerHTML 	= '<i class="fa fa-bars"></i>';
		btn.className 	+= ' active';

		btn.addEventListener('click', () => {
			parentContext.classList.toggle('minimized');
			btn.classList.toggle('active');
		});

		return btn;
	}

	static fontSize()
	{
		let btn 		= createBtn();
		btn.innerHTML 	= '<i class="fa fa-font"></i>';

		let popover = new TextSize({
			button	: btn
		});

		popover.build();

		return btn;
	}

	static history()
	{
		let btn 		= createBtn();
		btn.innerHTML 	= '<i class="fa fa-history"></i>';

		let popover = new History({
			button	: btn
		});

		popover.build();
		return btn;
	}

	static settings()
	{
		let btn 		= createBtn();
		btn.innerHTML 	= '<i class="fa fa-gears"></i>';

		btn.addEventListener('click', () => {});
		return btn;
	}

	static activeSession()
	{
		let state = window.TerminalState.state;

		let apollo = new sessionButtons({
			gds 		: 'apollo',
			active		: state.gds === 'apollo',
			session		: state.sessionIndex
		});

		let sabre = new sessionButtons({
			gds 		: 'sabre',
			active		: state.gds === 'sabre',
			session		: state.sessionIndex
		});

		let context 		= document.createElement('article');
		context.innerHTML 	= '<div class="label">Session</div>';

		context.appendChild( apollo.render() );
		context.appendChild( sabre.render() );

		return context;
	}

	static InputLanguage()
	{
		let context 		= document.createElement('article');
		context.innerHTML 	= '<div class="label">Input Language</div>';

		let btnGroup		= document.createElement('div');
		btnGroup.className 	= 'buttons';

		let buttons = ['APOLLO','SABRE'].map(( value ) => {

			let button		 = document.createElement('button');
			button.className = 'btn btn-sm btn-gold font-bold';
			button.innerHTML = value;

			btnGroup.appendChild( button );
			return button;
		});

		buttons[0].className += ' active';

		context.appendChild(btnGroup);
		return context;
	}

	static settingsButtons()
	{
		let context 		= document.createElement('article');

		[
			// MenuPanel.toggle(),
			MenuPanel.fontSize(),
			MenuPanel.history(),
			MenuPanel.settings()
		].map(( button ) => {
			context.appendChild(
				button
			)
		});

		return context;
	}

	static render()
	{
		context.innerHTML = '';

		context.appendChild( this.settingsButtons() );
		context.appendChild( this.activeSession() );
		context.appendChild( this.InputLanguage() );

		return context;
	}
}