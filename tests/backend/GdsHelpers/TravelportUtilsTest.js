const GdsActionTestUtil = require("../../../backend/Transpiled/Rbs/TestUtils/GdsActionTestUtil");
const TravelportUtils = require("../../../backend/GdsHelpers/TravelportUtils");

class TravelportUtilsTest extends require('../Transpiled/Lib/TestCase.js') {
	provideTestFetchAll() {
		let testCases = [];

		// 'RCVD-200259/ASC/C21F9B43/ NO ID  -CR- PEK/2G55/UA RM CA 20JUL030' and '06Z' were unwrapped incorrectly
		testCases.push({
			input: {
				cmd: '*HA',
			},
			output: {
				cmd: '*HA',
				output: [
					"     *****  AIR  HISTORY  *****",
					"SC MU 586 R16MAR LAXPVG HK/HX1  1230P  540P *",
					"RCVD-162052//BF88E253/ NO ID  -CR- PEK/2G55/UA RM CA 16MAR2052Z",
					"SC MU 211 K18MAR PVGMNL HK/HX1   720P 1110P",
					"SC MU 586 K17MAR LAXPVG HK/HX1  1230P  540P",
					"RCVD-162035//BF88A5B6/ NO ID  -CR- PEK/2G55/UA RM CA 16MAR2036Z",
					"AS MU 211 K18MAR PVGMNL HK/HK1   720P 1110P         5",
					"AS MU 586 K17MAR LAXPVG HK/HK1  1230P  540P         5",
					"RCVD-161735//BF8114E2/ NO ID  -CR- PEK/2G55/UA RM CA 16MAR1735Z",
					"XS MU 583 R31DEC PVGLAX TK/HK1   120P  905A *",
					"XS MU 212 R31DEC MNLPVG TK/HK1   635A 1005A *",
					"XS MU 211 R17DEC PVGMNL TK/HK1   720P 1110P",
					"XS MU 586 R16DEC LAXPVG HK/HX1  1130A  540P *",
					"AS MU 583 R30MAR PVGLAX SS/SS1   120P 1005A *       4",
					"AS MU 212 R30MAR MNLPVG SS/SS1   635A 1010A *       4",
					"AS MU 211 R17MAR PVGMNL SS/SS1   720P 1110P *       3",
					"AS MU 586 R16MAR LAXPVG SS/SS1  1230P  540P *       3",
					"RCVD-ORACLE/ZDYBHAP -CR- QSB/1O3K/1V AG CS 16DEC2127Z",
					"SC MU 586 R16DEC LAXPVG HK/HX1  1130A  540P *",
					"RCVD-162010//BF11513E/ NO ID  -CR- PEK/2G55/UA RM CA 16DEC2010Z",
					"XS MU 211 R18DEC PVGMNL SS/HK1  1230A  340A *",
					"XS MU 583 R31DEC PVGLAX HK/WK1   100P  905A *",
					"XS MU 212 R31DEC MNLPVG HK/WK1   455A  815A *",
					"XS MU 586 R16DEC LAXPVG HK/WK1  1130A  530P *",
					"SC MU 583 R31DEC PVGLAX TK/HK1   120P  905A *",
					"SC MU 212 R31DEC MNLPVG TK/HK1   635A 1005A *",
					"SC MU 211 R17DEC PVGMNL TK/HK1   720P 1110P",
					"SC MU 586 R16DEC LAXPVG TK/HK1  1130A  540P *",
					"RCVD-MOSES/ZDYBL1  -CR- QSB/1O3K/1V AG L1 25SEP1454Z",
					"SC MU 586 R16DEC LAXPVG TK/TK1  1130A  540P *",
					"RCVD-250857/ASC/BE7D6F6A/ NO ID  -CR- PEK/2G55/UA RM CA 25SEP0911Z",
					"SC MU 212 R31DEC MNLPVG TK/TK1   635A 1005A *",
					"RCVD-250809/ASC/BE7CB021/ NO ID  -CR- PEK/2G55/UA RM CA 25SEP0810Z",
					"AS MU 583 R31DEC PVGLAX HK/TK1   120P  905A *",
					"SC MU 583 R31DEC PVGLAX HK/WK1   100P  905A *",
					"RCVD-290741/ASC/C1E62E1D/ NO ID  -CR- PEK/2G55/UA RM CA 29AUG0745Z",
					"AS MU 586 R16DEC LAXPVG HK/TK1  1130A  550P *",
					"SC MU 586 R16DEC LAXPVG HK/WK1  1130A  530P *",
					"RCVD-280545/ASC/C17D52F9/ NO ID  -CR- PEK/2G55/UA RM CA 28AUG0548Z",
					"SC MU 212 R31DEC MNLPVG TK/TK1   635A 1005A *",
					"RCVD-280541/ASC/C17D428B/ NO ID  -CR- PEK/2G55/UA RM CA 28AUG0543Z",
					"AS MU 211 R17DEC PVGMNL TK/TK1   720P 1110P",
					"RCVD-280539/ASC/C17D327C/ NO ID  -CR- PEK/2G55/UA RM CA 28AUG0540Z",
					"SC MU 583 R31DEC PVGLAX SS/HK1   100P  905A *",
					"SC MU 212 R31DEC MNLPVG HK/TK1   635A 1005A *",
					"RCVD-200259/NMC/C21F9B46/ NO ID  -CR- PEK/2G55/UA RM CA 20JUL0306Z",
					"AS MU 212 R31DEC MNLPVG HK/TK1   635A 1005A *       2",
					"SC MU 212 R31DEC MNLPVG HK/WK1   455A  815A *",
					"RCVD-200259/ASC/C21F9B43/ NO ID  -CR- PEK/2G55/UA RM CA 20JUL0306Z",
					"SC MU 211 R18DEC PVGMNL SS/HK1  1230A  340A *",
					"SC MU 586 R16DEC LAXPVG SS/HK1  1130A  530P *",
					"RCVD-200241/NMC/C21A259F/ NO ID  -CR- PEK/2G55/UA RM CA 20JUL0245Z",
					"HS MU 583 R31DEC PVGLAX SS/HK1   100P  905A *       2",
					"HS MU 212 R31DEC MNLPVG SS/HK1   455A  815A *       2",
					"HS MU 211 R18DEC PVGMNL SS/HK1  1230A  340A *       1",
					"HS MU 586 R16DEC LAXPVG SS/HK1  1130A  530P *       1",
					"RCVD-SHIELA/ZDPBVWS -CR- QSB/2G55/1V AG WS 03JUN1740Z\n",
				].join('\n'),
			},
			calledCommands: [
				{
					"cmd": "*HA",
					"output": [
						"     *****  AIR  HISTORY  *****",
						"SC MU 586 R16MAR LAXPVG HK/HX1  1230P  540P *",
						"RCVD-162052//BF88E253/ NO ID  -CR- PEK/2G55/UA RM CA 16MAR2052Z",
						"SC MU 211 K18MAR PVGMNL HK/HX1   720P 1110P",
						"SC MU 586 K17MAR LAXPVG HK/HX1  1230P  540P",
						"RCVD-162035//BF88A5B6/ NO ID  -CR- PEK/2G55/UA RM CA 16MAR2036Z",
						"AS MU 211 K18MAR PVGMNL HK/HK1   720P 1110P         5",
						"AS MU 586 K17MAR LAXPVG HK/HK1  1230P  540P         5",
						"RCVD-161735//BF8114E2/ NO ID  -CR- PEK/2G55/UA RM CA 16MAR1735Z",
						"XS MU 583 R31DEC PVGLAX TK/HK1   120P  905A *",
						"XS MU 212 R31DEC MNLPVG TK/HK1   635A 1005A *",
						"XS MU 211 R17DEC PVGMNL TK/HK1   720P 1110P",
						"XS MU 586 R16DEC LAXPVG HK/HX1  1130A  540P *",
						")><",
					].join("\n"),
				},
				{
					"cmd": "MR",
					"output": [
						"AS MU 583 R30MAR PVGLAX SS/SS1   120P 1005A *       4",
						"AS MU 212 R30MAR MNLPVG SS/SS1   635A 1010A *       4",
						"AS MU 211 R17MAR PVGMNL SS/SS1   720P 1110P *       3",
						"AS MU 586 R16MAR LAXPVG SS/SS1  1230P  540P *       3",
						"RCVD-ORACLE/ZDYBHAP -CR- QSB/1O3K/1V AG CS 16DEC2127Z",
						"SC MU 586 R16DEC LAXPVG HK/HX1  1130A  540P *",
						"RCVD-162010//BF11513E/ NO ID  -CR- PEK/2G55/UA RM CA 16DEC2010Z",
						"XS MU 211 R18DEC PVGMNL SS/HK1  1230A  340A *",
						"XS MU 583 R31DEC PVGLAX HK/WK1   100P  905A *",
						"XS MU 212 R31DEC MNLPVG HK/WK1   455A  815A *",
						"XS MU 586 R16DEC LAXPVG HK/WK1  1130A  530P *",
						"SC MU 583 R31DEC PVGLAX TK/HK1   120P  905A *",
						"SC MU 212 R31DEC MNLPVG TK/HK1   635A 1005A *",
						")><",
					].join("\n"),
				},
				{
					"cmd": "MR",
					"output": [
						"SC MU 211 R17DEC PVGMNL TK/HK1   720P 1110P",
						"SC MU 586 R16DEC LAXPVG TK/HK1  1130A  540P *",
						"RCVD-MOSES/ZDYBL1  -CR- QSB/1O3K/1V AG L1 25SEP1454Z",
						"SC MU 586 R16DEC LAXPVG TK/TK1  1130A  540P *",
						"RCVD-250857/ASC/BE7D6F6A/ NO ID  -CR- PEK/2G55/UA RM CA 25SEP0911Z",
						"SC MU 212 R31DEC MNLPVG TK/TK1   635A 1005A *",
						"RCVD-250809/ASC/BE7CB021/ NO ID  -CR- PEK/2G55/UA RM CA 25SEP0810Z",
						"AS MU 583 R31DEC PVGLAX HK/TK1   120P  905A *",
						"SC MU 583 R31DEC PVGLAX HK/WK1   100P  905A *",
						"RCVD-290741/ASC/C1E62E1D/ NO ID  -CR- PEK/2G55/UA RM CA 29AUG0745Z",
						")><",
					].join("\n"),
				},
				{
					"cmd": "MR",
					"output": [
						"AS MU 586 R16DEC LAXPVG HK/TK1  1130A  550P *",
						"SC MU 586 R16DEC LAXPVG HK/WK1  1130A  530P *",
						"RCVD-280545/ASC/C17D52F9/ NO ID  -CR- PEK/2G55/UA RM CA 28AUG0548Z",
						"SC MU 212 R31DEC MNLPVG TK/TK1   635A 1005A *",
						"RCVD-280541/ASC/C17D428B/ NO ID  -CR- PEK/2G55/UA RM CA 28AUG0543Z",
						"AS MU 211 R17DEC PVGMNL TK/TK1   720P 1110P",
						"RCVD-280539/ASC/C17D327C/ NO ID  -CR- PEK/2G55/UA RM CA 28AUG0540Z",
						"SC MU 583 R31DEC PVGLAX SS/HK1   100P  905A *",
						"SC MU 212 R31DEC MNLPVG HK/TK1   635A 1005A *",
						"RCVD-200259/NMC/C21F9B46/ NO ID  -CR- PEK/2G55/UA RM CA 20JUL030)><",
					].join("\n"),
				},
				{
					"cmd": "MR",
					"output": [
						"6Z",
						"AS MU 212 R31DEC MNLPVG HK/TK1   635A 1005A *       2",
						"SC MU 212 R31DEC MNLPVG HK/WK1   455A  815A *",
						"RCVD-200259/ASC/C21F9B43/ NO ID  -CR- PEK/2G55/UA RM CA 20JUL0306Z",
						"SC MU 211 R18DEC PVGMNL SS/HK1  1230A  340A *",
						"SC MU 586 R16DEC LAXPVG SS/HK1  1130A  530P *",
						"RCVD-200241/NMC/C21A259F/ NO ID  -CR- PEK/2G55/UA RM CA 20JUL0245Z",
						"HS MU 583 R31DEC PVGLAX SS/HK1   100P  905A *       2",
						"HS MU 212 R31DEC MNLPVG SS/HK1   455A  815A *       2",
						"HS MU 211 R18DEC PVGMNL SS/HK1  1230A  340A *       1",
						"HS MU 586 R16DEC LAXPVG SS/HK1  1130A  530P *       1",
						")><",
					].join("\n"),
				},
				{
				    "cmd": "MR",
				    "output": "RCVD-SHIELA/ZDPBVWS -CR- QSB/2G55/1V AG WS 03JUN1740Z\n><",
				},
			],
		});

		return testCases.map(t => [t]); // arg tuple list
	}

	async testFetchAll(testCase) {
		await GdsActionTestUtil.testGdsAction(this, testCase, (session, input) =>
			TravelportUtils.fetchAll(input.cmd, session));
	}

	getTestMapping() {
		return [
			[this.provideTestFetchAll, this.testFetchAll],
		];
	}
}

module.exports = TravelportUtilsTest;